{"version":3,"sources":["redux/actions/logActions.js","redux/actions/types.js","components/layout/Searchbar.js","components/logs/LogItem.js","components/layout/PreLoader.js","components/logs/Logs.js","components/layout/AddBtn.js","redux/actions/techActions.js","components/techs/TechSelectOptions.js","components/logs/AddLogModal.js","components/logs/EditLogModal.js","components/techs/AddTechModal.js","components/techs/TechItem.js","components/techs/TechListModal.js","redux/reducers/logReducer.js","redux/reducers/techReducer.js","redux/reducers/index.js","redux/store.js","App.js","index.js"],"names":["setLoading","type","connect","searchLogs","text","dispatch","a","fetch","res","json","data","payload","response","statusText","useRef","style","marginBottom","className","id","placeholder","ref","onChange","current","value","htmlFor","deleteLog","method","setCurrent","log","href","attention","onClick","message","tech","format","date","M","toast","html","PreLoader","state","getLogs","logs","loading","useEffect","length","map","key","AddBtn","getTechs","techs","t","firstName","lastName","modalStyle","width","height","addLog","body","JSON","stringify","headers","useState","setMessage","setAttention","setTech","name","e","target","disabled","checked","newLog","Date","updateLog","updLog","addTech","setFirstName","setLastName","deleteTech","initialState","error","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","AutoInit","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f04bff13.chunk.js","sourcesContent":["import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  SEARCH_LOGS,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_LOG,\n} from './types';\n\n// get logs\nexport const getLogs = () => async (dispatch) => {\n  try {\n    setLoading();\n\n    const res = await fetch('/logs');\n    const data = await res.json();\n\n    dispatch({ type: GET_LOGS, payload: data });\n  } catch (err) {\n    dispatch({ type: LOGS_ERROR, payload: err.response.statusText });\n  }\n};\n\n// Add new log\n\nexport const addLog = (log) => async (dispatch) => {\n  try {\n    setLoading();\n\n    const res = await fetch('/logs', {\n      method: 'POST',\n      body: JSON.stringify(log),\n      headers: { 'Content-Type': 'application/json' },\n    });\n    const data = await res.json();\n\n    dispatch({ type: ADD_LOG, payload: data });\n  } catch (err) {\n    dispatch({ type: LOGS_ERROR, payload: err.response.statusText });\n  }\n};\n\n// delete logs\n\nexport const deleteLog = (id) => async (dispatch) => {\n  try {\n    setLoading();\n\n    await fetch(`/logs/${id}`, {\n      method: 'DELETE',\n    });\n\n    dispatch({ type: DELETE_LOG, payload: id });\n  } catch (err) {\n    dispatch({ type: LOGS_ERROR, payload: err.response.statusText });\n  }\n};\n\n// UPDATE_LOG on server\n\nexport const updateLog = (log) => async (dispatch) => {\n  try {\n    setLoading();\n\n    const res = await fetch(`/logs/${log.id}`, {\n      method: 'PUT',\n      body: JSON.stringify(log),\n      headers: { 'Content-Type': 'application/json' },\n    });\n\n    const data = await res.json();\n\n    dispatch({ type: UPDATE_LOG, payload: data });\n  } catch (err) {\n    dispatch({ type: LOGS_ERROR, payload: err.response.statusText });\n  }\n};\n\n// search log\n\nexport const searchLogs = (text) => async (dispatch) => {\n  try {\n    setLoading();\n\n    const res = await fetch(`/logs?q=${text}`);\n    const data = await res.json();\n\n    dispatch({ type: SEARCH_LOGS, payload: data });\n  } catch (err) {\n    dispatch({ type: LOGS_ERROR, payload: err.response.statusText });\n  }\n};\n\n// SET CURRENT LOG\n\nexport const setCurrent = (log) => {\n  return { type: SET_CURRENT, payload: log };\n};\n\n// clear current log\n\nexport const clearCurrent = () => {\n  return { type: CLEAR_CURRENT };\n};\n\nexport const setLoading = () => {\n  return { type: SET_LOADING };\n};\n","export const GET_LOGS = 'GET_LOGS';\nexport const ADD_LOG = 'ADD_LOG';\nexport const DELETE_LOG = 'DELETE_LOG';\nexport const SET_CURRENT = 'SET_CURRENT';\nexport const CLEAR_CURRENT = 'CLEAR_CURRENT';\nexport const UPDATE_LOG = 'UPDATE_LOG';\nexport const CLEAR_LOGS = 'CLEAR_LOGS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const LOGS_ERROR = 'LOGS_ERROR';\nexport const SEARCH_LOGS = 'SEARCH_LOGS';\nexport const GET_TECHS = 'GET_TECHS';\nexport const ADD_TECH = 'ADD_TECH';\nexport const DELETE_TECH = 'DELETE_TECH';\nexport const TECHS_ERROR = 'TECHS_ERROR';\n","import React, { useRef } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { searchLogs } from '../../redux/actions/logActions';\n\nconst Searchbar = ({ searchLogs }) => {\n  const text = useRef('');\n\n  const onChange = () => {\n    searchLogs(text.current.value);\n  };\n  return (\n    <nav style={{ marginBottom: '30px' }} className=\"blue\">\n      <div className=\"nav-wrapper\">\n        <form>\n          <div className=\"input-field\">\n            <input\n              id=\"search\"\n              type=\"search\"\n              placeholder=\"Search logs...\"\n              ref={text}\n              onChange={onChange}\n            />\n            <label className=\"label-icon\" htmlFor=\"search\">\n              <i className=\"material-icons\">search</i>\n            </label>\n            <i className=\"material-icons\">close</i>\n          </div>\n        </form>\n      </div>\n    </nav>\n  );\n};\nSearchbar.propTypes = {\n  searchLogs: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { searchLogs })(Searchbar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport PropTypes from 'prop-types';\nimport { deleteLog, setCurrent } from '../../redux/actions/logActions';\n\nconst LogItem = ({ log, deleteLog, setCurrent }) => {\n  const onDelete = () => {\n    deleteLog(log.id);\n    M.toast({ html: 'Log deleted' });\n  };\n  return (\n    <li className=\"collection-item\">\n      <div>\n        <a\n          href=\"#edit-log-modal\"\n          className={`modal-trigger ${\n            log.attention ? 'red-text' : 'blue-text'\n          }`}\n          onClick={() => setCurrent(log)}\n        >\n          {log.message}\n        </a>\n        <br />\n        <span className=\"grey-text\">\n          <span className=\"black-text\">ID #{log.id}</span> last updated by{' '}\n          <span className=\"black-text\">{log.tech}</span> on{' '}\n          <Moment format=\"MMMM Do YYYY, h:mm:ss a\">{log.date}</Moment>\n        </span>\n        <a href=\"#!\" className=\"secondary-content\">\n          <i className=\"material-icons grey-text\" onClick={onDelete}>\n            delete\n          </i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nLogItem.propTypes = {\n  log: PropTypes.object.isRequired,\n  deleteLog: PropTypes.func.isRequired,\n  setCurrent: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteLog, setCurrent })(LogItem);\n","import React from 'react';\n\nconst PreLoader = () => {\n  return (\n    <div className=\"progress blue lighten-4\">\n      <div className=\"indeterminate blue\" />\n    </div>\n  );\n};\n\nexport default PreLoader;\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LogItem from './LogItem';\nimport PreLoader from '../layout/PreLoader';\nimport { getLogs } from '../../redux/actions/logActions';\n\nconst Logs = ({ log: { logs, loading }, getLogs }) => {\n  useEffect(() => {\n    getLogs();\n\n    // eslint-disable-next-line\n  }, []);\n\n  if (loading || logs === null) {\n    return <PreLoader />;\n  }\n  return (\n    <ul className=\"collection with-header\">\n      <li className=\"collection-header\">\n        <h4 className=\"center center\">System Logs</h4>\n      </li>\n      {!loading && logs.length === 0 ? (\n        <p className=\"center\">No logs to show...</p>\n      ) : (\n        logs.map((log) => <LogItem log={log} key={log.id} />)\n      )}\n    </ul>\n  );\n};\n\nLogs.propTypes = {\n  log: PropTypes.object.isRequired,\n  getLogs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  log: state.log,\n});\n\nexport default connect(mapStateToProps, { getLogs })(Logs);\n","import React from 'react';\n\nconst AddBtn = () => {\n  return (\n    <div className=\"fixed-action-btn\">\n      <a\n        href=\"#add-log-modal\"\n        className=\"btn-floating btn-large blue darken-2 modal-trigger\"\n      >\n        <i className=\"large material-icons\">add</i>\n      </a>\n      <ul>\n        <li>\n          <a\n            href=\"#tech-list-modal\"\n            className=\"btn-floating green modal-trigger\"\n          >\n            <i className=\"material-icons\">person</i>\n          </a>\n        </li>\n        <li>\n          <a href=\"#add-tech-modal\" className=\"btn-floating red modal-trigger\">\n            <i className=\"material-icons\">person_add</i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default AddBtn;\n","import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  TECHS_ERROR,\n  SET_LOADING,\n} from './types';\n\n// Get techs from server\n\nexport const getTechs = () => async (dispatch) => {\n  try {\n    setLoading();\n\n    const res = await fetch('/techs');\n    const data = await res.json();\n\n    dispatch({ type: GET_TECHS, payload: data });\n  } catch (err) {\n    dispatch({ type: TECHS_ERROR, payload: err.response.statusText });\n  }\n};\n\n// Add technicians\n\nexport const addTech = (tech) => async (dispatch) => {\n  try {\n    setLoading();\n\n    const res = await fetch('/techs', {\n      method: 'POST',\n      body: JSON.stringify(tech),\n      headers: { 'Content-Type': 'application/json' },\n    });\n    const data = await res.json();\n\n    dispatch({ type: ADD_TECH, payload: data });\n  } catch (err) {\n    dispatch({ type: TECHS_ERROR, payload: err.response.statusText });\n  }\n};\n\n// Delete techs\n\nexport const deleteTech = (id) => async (dispatch) => {\n  try {\n    setLoading();\n\n    await fetch(`/techs/${id}`, {\n      method: 'DELETE',\n    });\n\n    dispatch({ type: DELETE_TECH, payload: id });\n  } catch (err) {\n    dispatch({ type: TECHS_ERROR, payload: err.response.statusText });\n  }\n};\n\n// set loading to true\n\nexport const setLoading = () => {\n  return { type: SET_LOADING };\n};\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getTechs } from '../../redux/actions/techActions';\n\nconst TechSelectOptions = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n    // eslint-disable-next-line\n  }, []);\n  return (\n    !loading &&\n    techs !== null &&\n    techs.map((t) => (\n      <option key={t.id} value={`${t.firstName} ${t.lastName}`}>\n        {t.firstName} {t.lastName}\n      </option>\n    ))\n  );\n};\n\nTechSelectOptions.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  tech: state.tech,\n});\n\nexport default connect(mapStateToProps, { getTechs })(TechSelectOptions);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport TechSelectOptions from '../techs/TechSelectOptions';\nimport { addLog } from '../../redux/actions/logActions';\n\nconst AddLogModal = ({ addLog }) => {\n  const [message, setMessage] = useState('');\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState('');\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({\n        html: 'Please enter a message and a tech...',\n      });\n    } else {\n      const newLog = {\n        message,\n        attention,\n        tech,\n        date: new Date(),\n      };\n\n      addLog(newLog);\n\n      M.toast({ html: `Log added by ${tech}` });\n\n      // clear fields\n\n      setMessage('');\n      setTech('');\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id=\"add-log-modal\" className=\"modal\" style={modalStyle}>\n      <div className=\"modal-content\">\n        <h4>Enter System Log</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"message\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n            <label htmlFor=\"message\" className=\"active\">\n              Log Message\n            </label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <select\n              name=\"tech\"\n              value={tech}\n              className=\"browser-default\"\n              onChange={(e) => setTech(e.target.value)}\n            >\n              <option value=\"\" disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <p>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  className=\"field-in\"\n                  checked={attention}\n                  value={attention}\n                  onChange={() => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a\n          href=\"#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect blue waves-light btn\"\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nAddLogModal.propTypes = {\n  addLog: PropTypes.func.isRequired,\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%',\n};\n\nexport default connect(null, { addLog })(AddLogModal);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport TechSelectOptions from '../techs/TechSelectOptions';\nimport { updateLog } from '../../redux/actions/logActions';\n\nconst EditLogModal = ({ current, updateLog }) => {\n  const [message, setMessage] = useState('');\n  const [attention, setAttention] = useState(false);\n  const [tech, setTech] = useState('');\n\n  useEffect(() => {\n    if (current) {\n      setMessage(current.message);\n      setAttention(current.attention);\n      setTech(current.tech);\n    }\n  }, [current]);\n\n  const onSubmit = () => {\n    if (message === '' || tech === '') {\n      M.toast({\n        html: 'Please enter a message and a tech',\n      });\n    } else {\n      const updLog = {\n        id: current.id,\n        message,\n        attention,\n        tech,\n        date: new Date(),\n      };\n\n      updateLog(updLog);\n      M.toast({ html: `Log updated by ${tech}` });\n\n      // clear fields\n\n      setMessage('');\n      setTech('');\n      setAttention(false);\n    }\n  };\n\n  return (\n    <div id=\"edit-log-modal\" className=\"modal\" style={modalStyle}>\n      <div className=\"modal-content\">\n        <h4>Enter System Log</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"message\"\n              value={message}\n              onChange={(e) => setMessage(e.target.value)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <select\n              name=\"tech\"\n              value={tech}\n              className=\"browser-default\"\n              onChange={(e) => setTech(e.target.value)}\n            >\n              <option value=\"\" disabled>\n                Select Technician\n              </option>\n              <TechSelectOptions />\n            </select>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <p>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  className=\"field-in\"\n                  checked={attention}\n                  value={attention}\n                  onChange={() => setAttention(!attention)}\n                />\n                <span>Needs Attention</span>\n              </label>\n            </p>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a\n          href=\"#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect blue waves-light btn\"\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nconst modalStyle = {\n  width: '75%',\n  height: '75%',\n};\n\nEditLogModal.propTypes = {\n  updateLog: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  current: state.log.current,\n});\n\nexport default connect(mapStateToProps, { updateLog })(EditLogModal);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { addTech } from '../../redux/actions/techActions';\n\nconst AddTechModal = ({ addTech }) => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n\n  const onSubmit = () => {\n    if (firstName === '' || lastName === '') {\n      M.toast({\n        html: 'Please enter the First Name and Last Name...',\n      });\n    } else {\n      addTech({\n        firstName,\n        lastName,\n      });\n\n      M.toast({\n        html: `${firstName} ${lastName} was added as a technician.`,\n      });\n      // clear fields\n      setFirstName('');\n      setLastName('');\n    }\n  };\n\n  return (\n    <div id=\"add-tech-modal\" className=\"modal\">\n      <div className=\"modal-content\">\n        <h4>New Technician</h4>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"firstName\"\n              value={firstName}\n              onChange={(e) => setFirstName(e.target.value)}\n            />\n            <label htmlFor=\"lastName\" className=\"active\">\n              First Name\n            </label>\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"input-field\">\n            <input\n              type=\"text\"\n              name=\"lastName\"\n              value={lastName}\n              onChange={(e) => setLastName(e.target.value)}\n            />\n            <label htmlFor=\"lastName\" className=\"active\">\n              Last Name\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"modal-footer\">\n        <a\n          href=\"#!\"\n          onClick={onSubmit}\n          className=\"modal-close waves-effect blue waves-light btn\"\n        >\n          Enter\n        </a>\n      </div>\n    </div>\n  );\n};\n\nAddTechModal.propTypes = {\n  addTech: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { addTech })(AddTechModal);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { deleteTech } from '../../redux/actions/techActions';\n\nconst TechItem = ({ tech: { id, firstName, lastName }, deleteTech }) => {\n  const onDelete = () => {\n    deleteTech(id);\n    M.toast({\n      html: ' Technician deleted',\n    });\n  };\n\n  return (\n    <li className=\"collection-item\">\n      <div>\n        {firstName} {lastName}\n        <a href=\"#!\" className=\"secondary-content\" onClick={onDelete}>\n          <i className=\"material-icons grey-text\">delete</i>\n        </a>\n      </div>\n    </li>\n  );\n};\n\nTechItem.propTypes = {\n  tech: PropTypes.object.isRequired,\n  deleteTech: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { deleteTech })(TechItem);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport TechItem from './TechItem';\nimport { getTechs } from '../../redux/actions/techActions';\n\nconst TechListModal = ({ getTechs, tech: { techs, loading } }) => {\n  useEffect(() => {\n    getTechs();\n\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div id=\"tech-list-modal\" className=\"modal\">\n      <div className=\"modal-content\">\n        <h4>Technician List</h4>\n        <ul className=\"collection\">\n          {!loading &&\n            techs !== null &&\n            techs.map((tech) => <TechItem tech={tech} key={tech.id} />)}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nTechListModal.propTypes = {\n  tech: PropTypes.object.isRequired,\n  getTechs: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  tech: state.tech,\n});\nexport default connect(mapStateToProps, { getTechs })(TechListModal);\n","import {\n  GET_LOGS,\n  SET_LOADING,\n  LOGS_ERROR,\n  ADD_LOG,\n  DELETE_LOG,\n  SEARCH_LOGS,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_LOG,\n} from '../actions/types';\n\nconst initialState = {\n  logs: null,\n  current: null,\n  loading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_LOGS:\n      return {\n        ...state,\n        logs: payload,\n        loading: false,\n      };\n    case ADD_LOG:\n      return {\n        ...state,\n        logs: [...state.logs, action.payload],\n        loading: false,\n      };\n    case DELETE_LOG:\n      return {\n        ...state,\n        logs: state.logs.filter((log) => log.id !== action.payload),\n        loading: false,\n      };\n    case UPDATE_LOG:\n      return {\n        ...state,\n        logs: state.logs.map((log) =>\n          log.id === action.payload.id ? action.payload : log,\n        ),\n      };\n\n    case SEARCH_LOGS:\n      return {\n        ...state,\n        logs: action.payload,\n      };\n    case SET_CURRENT:\n      return {\n        ...state,\n        current: action.payload,\n      };\n    case CLEAR_CURRENT:\n      return {\n        ...state,\n        current: null,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case LOGS_ERROR:\n      return {\n        ...state,\n        error: payload,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  GET_TECHS,\n  ADD_TECH,\n  DELETE_TECH,\n  TECHS_ERROR,\n  SET_LOADING,\n} from '../actions/types';\n\nconst initialState = {\n  techs: null,\n  loading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  const { type, payload } = action;\n  switch (type) {\n    case GET_TECHS:\n      return {\n        ...state,\n        techs: payload,\n        loading: false,\n      };\n    case ADD_TECH:\n      return {\n        ...state,\n        techs: [...state.techs, action.payload],\n        loading: false,\n      };\n    case DELETE_TECH:\n      return {\n        ...state,\n        techs: state.techs.filter((tech) => tech.id !== action.payload),\n        loading: false,\n      };\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    case TECHS_ERROR:\n      return {\n        ...state,\n        error: action.payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport logReducer from './logReducer';\nimport techReducer from './techReducer';\n\nexport default combineReducers({\n  log: logReducer,\n  tech: techReducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware)),\n);\n\nexport default store;\n","import React, { Fragment, useEffect } from 'react';\nimport 'materialize-css/dist/css/materialize.min.css';\nimport M from 'materialize-css/dist/js/materialize.min.js';\nimport { Provider } from 'react-redux';\nimport Searchbar from './components/layout/Searchbar';\nimport Logs from './components/logs/Logs';\nimport AddBtn from './components/layout/AddBtn';\nimport AddLogModal from './components/logs/AddLogModal';\nimport EditLogModal from './components/logs/EditLogModal';\nimport AddTechModal from './components/techs/AddTechModal';\nimport TechListModal from './components/techs/TechListModal';\nimport './App.css';\n\nimport store from './redux/store';\n\nconst App = () => {\n  useEffect(() => {\n    // init materialize JS\n    M.AutoInit();\n  });\n  return (\n    <Provider store={store}>\n      <Fragment>\n        <Searchbar />\n        <div className=\"container\">\n          <AddBtn />\n          <AddLogModal />\n          <EditLogModal />\n          <AddTechModal />\n          <TechListModal />\n          <Logs />\n        </div>\n      </Fragment>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}